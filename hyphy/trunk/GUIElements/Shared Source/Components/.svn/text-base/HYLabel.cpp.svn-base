/*	Static Label component		Sergei L. Kosakovsky Pond, May 2000 - November 2001.*/#include "HYEventTypes.h"#include "HYLabel.h"#include "HYGraphicPane.h"#ifdef 	  __HYPHYDMALLOC__	#include "dmalloc.h"#endif//___________________________________________________________________HYLabel::_HYLabel(_HYRect r,Ptr p):_HYComponent (r,p){	backColor.R = backColor.G = backColor.B = 255;	foreColor.R = foreColor.G = foreColor.B = 0;	labelFont.size = 9;	labelFont.style = HY_FONT_PLAIN;	labelFont.face = "Monaco";	alignFlags = 0;	visFlags = 0;}//__________________________________________________________________			_HYLabel::~_HYLabel(){}//__________________________________________________________________void		_HYLabel::SetBackColor (_HYColor c){	if ((c.R!=backColor.R)||(c.G!=backColor.G)||(c.B!=backColor.B))	{		backColor = c;		_SetBackColor (c);		_MarkForUpdate();	}}//___________________________________________________________________HYColor&		_HYLabel::GetBackColor (void){	return backColor;}		//__________________________________________________________________void		_HYLabel::SetForeColor (_HYColor c){	if ((c.R!=foreColor.R)||(c.G!=foreColor.G)||(c.B!=foreColor.B))	{		foreColor = c;		_SetForeColor (c);		_MarkForUpdate();	}}//___________________________________________________________________HYColor&		_HYLabel::GetForeColor (void){	return foreColor;}		//__________________________________________________________________void		_HYLabel::SetText (_String newText){	if (labelText.Equal(&newText))		return;			labelText = newText;	_SetText ();	_MarkForUpdate();}//___________________________________________________________________String&		_HYLabel::GetText (void){	return labelText;}//___________________________________________________________________HYFont&		_HYLabel::GetFont (void){	return labelFont;}//__________________________________________________________________void		_HYLabel::SetShadow (bool toggle){	if (toggle)	{		if (!(HY_LABEL_SHADOW&visFlags))		{			visFlags|=HY_LABEL_SHADOW;			_MarkForUpdate();		}	}	else	{		if (HY_LABEL_SHADOW&visFlags)		{			visFlags&=(0xff-HY_LABEL_SHADOW);			_MarkForUpdate();		}	}}//__________________________________________________________________void			_HYLabel::SetFont (_HYFont&f){	if ((f.face!=labelFont.face)||(f.size!=labelFont.size)||(f.style!=labelFont.style))	{		_SetFont (f);		labelFont.face = f.face;		labelFont.size = f.size;		labelFont.style = f.style;		_HYPlatformLabel::_SetVisibleSize (rel);		_MarkForUpdate();	}}//__________________________________________________________________void		_HYLabel::SetVisibleSize	 (_HYRect rel){	_HYComponent::SetVisibleSize (rel);	_HYPlatformLabel::_SetVisibleSize (rel);}